# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Acceptance Tests
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - '.vscode'
      - '.gitignore'
      - 'CHANGELOG.md'
      - 'CONTRIBUTING.md'
      - 'LICENSE'
      - '.changelog/**'
      - 'contributing/**'
      - 'docs/**'
      - 'examples/**'
      - 'scripts/**'
      - 'templates/**'
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will 
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  schedule:
    - cron: '0 9 * * *'
  workflow_dispatch:
env:
  PROVIDER_VARS: ${{ secrets.PROVIDER_VARS }}
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      with: 
        repository: pingidentity/terraform-provider-davinci

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
        cache: true
      id: go

    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: |
        go build -v .

  prepare-na:
    name: Prepare Pre-prod
    runs-on: ubuntu-latest

    env:
      PINGONE_USERNAME: ${{ secrets.NA_STAGING_PINGONE_USERNAME }}
      PINGONE_PASSWORD: ${{ secrets.NA_STAGING_PINGONE_PASSWORD }}
      PINGONE_CLIENT_ID: ${{ secrets.NA_STAGING_PINGONE_CLIENT_ID }}
      PINGONE_CLIENT_SECRET: ${{ secrets.NA_STAGING_PINGONE_CLIENT_SECRET }}
      PINGONE_ENVIRONMENT_ID: ${{ secrets.NA_STAGING_PINGONE_ENVIRONMENT_ID }}
      PINGONE_REGION: "NorthAmerica"
      PINGONE_LICENSE_ID: ${{ secrets.NA_STAGING_PINGONE_LICENSE_ID }}
      PINGONE_TESTING_PROVIDER_VERSION: "test"

    timeout-minutes: 5
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      with: 
        repository: pingidentity/terraform-provider-davinci

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
        cache: true
      id: go

    - name: Get dependencies
      run: |
        for s in $(echo $PROVIDER_VARS | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" ); do
          export $s
        done
        go mod download

    - name: Sweep to prepare
      run: |
        for s in $(echo $PROVIDER_VARS | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" ); do
          export $s
        done
        make sweep

  # run acceptance tests in a matrix with Terraform core versions
  test-na:
    name: Acceptance Test NA (Multi-version)
    needs: [prepare-na, build]
    runs-on: ubuntu-latest

    env:
      PINGONE_USERNAME: ${{ secrets.NA_STAGING_PINGONE_USERNAME }}
      PINGONE_PASSWORD: ${{ secrets.NA_STAGING_PINGONE_PASSWORD }}
      PINGONE_CLIENT_ID: ${{ secrets.NA_STAGING_PINGONE_CLIENT_ID }}
      PINGONE_CLIENT_SECRET: ${{ secrets.NA_STAGING_PINGONE_CLIENT_SECRET }}
      PINGONE_ENVIRONMENT_ID: ${{ secrets.NA_STAGING_PINGONE_ENVIRONMENT_ID }}
      PINGONE_REGION: "NorthAmerica"
      PINGONE_LICENSE_ID: ${{ secrets.NA_STAGING_PINGONE_LICENSE_ID }}
      PINGONE_TESTING_PROVIDER_VERSION: "test"

    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.1.*'
          - '1.2.*'
          - '1.3.*'
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      with: 
        repository: pingidentity/terraform-provider-davinci

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
        cache: true
      id: go

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ matrix.terraform }}
        terraform_wrapper: false

    - name: Get dependencies
      run: |
        for s in $(echo $PROVIDER_VARS | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" ); do
          export $s
        done
        go mod download
        go mod tidy

    - name: TF acceptance tests
      timeout-minutes: 45
      run: |
        for s in $(echo $PROVIDER_VARS | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" ); do
          export $s
        done
        make testacc

  cleanup-na:
    name: Clean up NA
    needs: test-na
    runs-on: ubuntu-latest

    env:
      PINGONE_USERNAME: ${{ secrets.NA_STAGING_PINGONE_USERNAME }}
      PINGONE_PASSWORD: ${{ secrets.NA_STAGING_PINGONE_PASSWORD }}
      PINGONE_CLIENT_ID: ${{ secrets.NA_STAGING_PINGONE_CLIENT_ID }}
      PINGONE_CLIENT_SECRET: ${{ secrets.NA_STAGING_PINGONE_CLIENT_SECRET }}
      PINGONE_ENVIRONMENT_ID: ${{ secrets.NA_STAGING_PINGONE_ENVIRONMENT_ID }}
      PINGONE_REGION: "NorthAmerica"
      PINGONE_LICENSE_ID: ${{ secrets.NA_STAGING_PINGONE_LICENSE_ID }}
      PINGONE_TESTING_PROVIDER_VERSION: "test"

    timeout-minutes: 5
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      with: 
        repository: pingidentity/terraform-provider-davinci

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'
        cache: true
      id: go

    - name: Get dependencies
      run: |
        for s in $(echo $PROVIDER_VARS | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" ); do
          export $s
        done
        go mod download

    - name: Sweep to prepare
      run: |
        for s in $(echo $PROVIDER_VARS | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" ); do
          export $s
        done
        make sweep
